package com.pmar.kotlinlab.projecteuler

import java.math.BigInteger

/**
 * @author Pavel Marchenko (Pavel.Marchenko@datart.com -- DataArt)
 */
class Problem13 : Problem<String>() {

    override fun getProblemId() = 13

    override fun getProblemDesc() =
        """
            Work out the first ten digits of the sum of the following one-hundred 50-digit numbers.
        """.trimIndent()

    val numbers =
        "371072875339021027987979982208375902465101357402504637693767749000971264812489697007805041701826053874324986" +
                "1995247410594742333095130581237266173096299194221336357416157252243056330181107240615490825023067588" +
                "2075393461711719803104210475137780632466768926167069662363382013637841838368417873436172675728112879" +
                "8128499794080654819315926216912758898327384427422891743252032192358942287679648767027218931847451445" +
                "7360013064390911672168568445887116031532767038648610584302543993961982891759366568675793495162176457" +
                "1418565606295021572231965867550793241933316490635246274190492910143244581382266334794475817892575867" +
                "7183372176619637515905792397282455988384075820356532535939900840263356894883018945862822782880181199" +
                "3848262820142781941399405675871511700943903539866437282711265382998724078447305319010429358686515506" +
                "0062958648615320752733719591914205172558297169388870771546649911559348760353292171497005693854370070" +
                "5768266846246214956500764717872944383776045328265410875682844319119063469403785521777929514536123272" +
                "5250002960710750825638156567108852583507214587657617241097644733911060721826523687722363604517423706" +
                "9058518606604482076212098132878607339694128114266041808683061932846081119106155694051268969251934325" +
                "4517283886419180470492932150586425630494836246722164843507620172791803994469300473295634069115732444" +
                "3869081257945140890577062294291971079282095503768752567877309186254074496984450833039368212618336384" +
                "8253301546861961243487676812975343759465158038628759287849020152168555482871720121925776695478182833" +
                "7579931036147403568564490955270978647975811672632010043689784255353992093183744149780686098448403098" +
                "1290777917990882187953273644756755908480308708698755139271185451707854416185242432069315033259959406" +
                "8957565367821070749269665376763262354472106979395067965269474259770973916669376304263398708541052684" +
                "7082990852113994273657341161827603150012716537860736150108085700914993951255702819874600437535829035" +
                "3174347173269321235781549826297425527373079495375976510530594696606768315657437716740187527588902802" +
                "5717332296191766687138199318110487701902712526768027607800301367868099252546340106163286652636270218" +
                "5404977055856299465806362379931407462559622407448690823117497779236546625724692332281091714191430288" +
                "1971032885978066697608929386382850253334033441306557801612781592181500556186883646842009047023053081" +
                "1728164304876237919698424872550366387845831148769693215490281042402013833512446218144177347063783299" +
                "4906362596664985876182212252255124867645336772018697169854431241957240991395900895231005882295548255" +
                "3002635207815322967962494816419538682187747608532713228572311042480345612486769706450799523637774242" +
                "5354112916842768655389262050249103265729672370191327572567528565324825826546309220705859652229798860" +
                "2722583319131263751473419948895347657455011849570145487928898485682772607771372140379887971538298203" +
                "7830314735277215803481445134913732266513813482954382919991818027891652243102739225112286953940957953" +
                "0664052326325380441000596549391598795936352974615218550237130764225512118369380358038858490341698116" +
                "2220729771861582366784246891579935329619226246795719440126904387710727504810239089552359745723189706" +
                "7725479150615055049539229795309011299675198618808822587531452958409925120382900940777077567211306739" +
                "7083047244838165338735023408456470580773088295917476714036319800818712901187549131054712658197623331" +
                "0448183862695154563349263665728975634005004284628018351707052783183942588214552122725125032755121603" +
                "5469812005817621652128276527516912968977893223819573432933994643750190783694576588335239988675506164" +
                "9651847751807381688378610915273579297013376217784275219262340194239963916804498399317331273132924185" +
                "7071473495669166746876346609150359146775049951867143023521962889489010242332511691361962662273267460" +
                "8005915474718307983928685352069469445407247684182252467441716151403642798227334805555621481897142617" +
                "9103425986472045168939894221798260880768528778364618279934631376775430780936333301898264209010848802" +
                "5216746708832151201858835432238128769527867132961247478246453863699300904931036361976387803962184073" +
                "5723997942234062353938083396513274080111166662789198148808779794187687614423003098449085141160661826" +
                "2936828367647447792391803351109890697907148578694408955299065364044742557608365997664579509666024396" +
                "4099053896071201982199760475994901972302976491398268003297315603712004137790378556608508925216730939" +
                "3198727502754689069037075394130426523150119480937724504879515095410092164586375471059843679178639167" +
                "0211874924319957006419179697775990283006991536871371193661495281130587638027841075444973307840789923" +
                "1155355625611423224232550336854424889173534488991150144064802036906806396067232219320414953541503128" +
                "8803395360532993403680069777106505666319548123488067321014673905856855793458140362782270328082616570" +
                "7739483275922328459417065250945123252306082291880205877731971983945018088807242966198081119777158542" +
                "5020165450904132458097868827789487218596177210783843506918615543566288406225747369228450951620849603" +
                "98013400172393067166682355524525280460972253503534226472524250874054075591789781264330331690"

    override fun solve(): String {
        var sum = BigInteger.ZERO
        numbers.windowed(50, 50).forEach { sum = sum.add(BigInteger(it)) }
        return sum.toString().substring(0, 10)
    }
}